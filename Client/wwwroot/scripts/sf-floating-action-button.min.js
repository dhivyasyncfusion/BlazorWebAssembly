(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["sf-floating-action-button"],{

/***/ "./bundles/sf-floating-action-button.js":
/*!**********************************************!*\
  !*** ./bundles/sf-floating-action-button.js ***!
  \**********************************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_sf_floating_action_button_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/sf-floating-action-button.js */ "./modules/sf-floating-action-button.js");
/* harmony import */ var _modules_sf_floating_action_button_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_sf_floating_action_button_js__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ "./modules/sf-floating-action-button.js":
/*!**********************************************!*\
  !*** ./modules/sf-floating-action-button.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

window.sfBlazor = window.sfBlazor || {};
window.sfBlazor.Fab = function () {
  'use strict';

  var FABVERTDIST = '--fabVertDist';
  var FABHORZDIST = '--fabHorzDist';
  var FIXEDFAB = "e-fab-fixed";
  var FABHIDDEN = "e-fab-hidden";
  var SfFab = function () {
    function SfFab(options) {
      this.sfBlazor = window.sfBlazor;
      this.updateContext(options);
      this.sfBlazor.setCompInstance(this);
      this.initialize();
    }
    ;
    SfFab.prototype.updateContext = function (fabObj) {
      sf.base.extend(this, this, fabObj);
    };
    SfFab.prototype.initialize = function () {
      this.checkTarget();
      this.setClientProps(true);
      this.bindEvent();
      this.visible ? this.element.classList.remove(FABHIDDEN) : '';
    };
    SfFab.prototype.checkTarget = function () {
      this.targetEle = null;
      if (!sf.base.isNullOrUndefined(this.target) && typeof this.target === 'string') {
        this.targetEle = document.querySelector(this.target);
      }
      this.isFixed = sf.base.isNullOrUndefined(this.targetEle);
      this.isFixed ? '' : this.targetEle.appendChild(this.element);
      this.isFixed ? this.element.classList.add(FIXEDFAB) : this.element.classList.remove(FIXEDFAB);
    };
    ;
    SfFab.prototype.bindEvent = function () {
      sf.base.EventHandler.add(window, 'resize', this.resizeHandler, this);
    };
    SfFab.prototype.unBindEvent = function () {
      sf.base.EventHandler.remove(window, 'resize', this.resizeHandler);
    };
    SfFab.prototype.resizeHandler = function () {
      this.getOffset();
      if (this.isMiddle || this.isCenter) this.dotNetRef.invokeMethodAsync("UpdatePosition", this.yOffset, this.xOffset);
    };
    SfFab.prototype.setClientProps = function (isTarget) {
      this.getOffset();
      var props = {
        yOffset: this.isMiddle ? this.yOffset : "",
        xOffset: this.isCenter ? this.xOffset : ""
      };
      isTarget ? props.isFixed = this.isFixed ? "Fixed" : "Absolute" : '';
      this.clientProps = JSON.stringify(props);
    };
    SfFab.prototype.getOffset = function () {
      if (this.isMiddle) {
        this.yOffset = ((this.targetEle ? this.targetEle.clientHeight : window.innerHeight) - this.element.offsetHeight) / 2 + "px";
        this.element.style.setProperty(FABVERTDIST, this.yOffset);
      }
      if (this.isCenter) {
        this.xOffset = ((this.targetEle ? this.targetEle.clientWidth : window.innerWidth) - this.element.offsetWidth) / 2 + "px";
        this.element.style.setProperty(FABHORZDIST, this.xOffset);
      }
    };
    SfFab.prototype.destroy = function () {
      this.unBindEvent();
    };
    SfFab.prototype.validateTarget = function (options) {
      this.updateContext(options);
      this.checkTarget();
      this.setClientProps(true);
    };
    SfFab.prototype.setPosition = function (options) {
      this.updateContext(options);
      this.setClientProps(false);
    };
    return SfFab;
  }();
  var Fab = {
    initialize: function initialize(options) {
      if (options.dataId) {
        var fab = new SfFab(options);
        return fab.clientProps;
      }
      return {};
    },
    validateTarget: function validateTarget(options) {
      if (options.dataId) {
        var fab = window.sfBlazor.getCompInstance(options.dataId);
        fab.validateTarget(options);
        return fab.clientProps;
      }
      return {};
    },
    setPosition: function setPosition(options) {
      if (options.dataId) {
        var fab = window.sfBlazor.getCompInstance(options.dataId);
        fab.setPosition(options);
        return fab.clientProps;
      }
      return {};
    },
    destroy: function destroy(dataId) {
      if (dataId) {
        window.sfBlazor.getCompInstance(dataId).destroy();
      }
    }
  };
  return Fab;
}();

/***/ })

}]);(async()=>{await import(`${document.baseURI}_content/Syncfusion.Blazor/scripts/syncfusion-blazor-base.min.js?v=19.3.1`).then(()=>{})})();