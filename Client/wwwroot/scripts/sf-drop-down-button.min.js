(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["sf-drop-down-button"],{

/***/ "./bundles/sf-drop-down-button.js":
/*!****************************************!*\
  !*** ./bundles/sf-drop-down-button.js ***!
  \****************************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_sf_drop_down_button_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/sf-drop-down-button.js */ "./modules/sf-drop-down-button.js");
/* harmony import */ var _modules_sf_drop_down_button_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_sf_drop_down_button_js__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ "./modules/sf-drop-down-button.js":
/*!****************************************!*\
  !*** ./modules/sf-drop-down-button.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

window.sfBlazor = window.sfBlazor || {};
window.sfBlazor.DropDownButton = function () {
  'use strict';

  /* eslint-disable @typescript-eslint/no-explicit-any */
  var HIDDEN = 'hidden';
  var TRANSPARENT = 'e-transparent';
  var EMPTY = '';
  var PIXEL = 'px';
  var DOT = '.';
  var HASH = '#';
  var BTN_CLICK = 'ButtonClickAsync';
  var DROPDOWN = 'e-dropdown-menu';
  var COLOR_PICKER = 'e-colorpicker-container';
  var HSV_MODEL = 'e-hsv-model';
  var MODEL = '.e-colorpicker.e-modal';
  var CONTAINER = '.e-container';
  var ITEM = 'e-item';
  var FOCUSED = 'e-focused';
  var WRAPPER = 'e-split-btn-wrapper';
  var ELEMENT = 'e-dropdown-btn';
  var MOUSEDOWN = 'mousedown touchstart';
  var KEYDOWN = 'keydown';
  var CLICK = 'click';
  var SCROLL = 'scroll';
  var ESC = 27;
  var UP = 38;
  var DOWN = 40;
  var ENTER = 13;
  var TAB = 9;
  var RTL = 'e-rtl';
  /**
   * Dropdown Button Blazor introp module
   */
  var SfDropDownButton = /** @class */function () {
    function SfDropDownButton(element, popup, dotnetRef, dataId, cp_dataId) {
      this.isPopupClick = false;
      this.dataId = dataId;
      this.cp_dataId = cp_dataId;
      this.element = element;
      this.dotNetRef = dotnetRef;
      this.popup = popup;
      window.sfBlazor.setCompInstance(this);
      this.addScrollEvents(true);
    }
    SfDropDownButton.prototype.openPopup = function (blankIcon) {
      this.popup.style.visibility = HIDDEN;
      document.body.appendChild(this.popup);
      if (blankIcon) {
        sf.splitbuttons.setBlankIconStyle(this.popup);
      }
      this.popup.classList.remove("e-hidden");
      this.popup.classList.remove(TRANSPARENT);
      var zIndex = sf.popups.getZindexPartial(this.element);
      var isColorPicker = this.element.parentElement.classList.contains(COLOR_PICKER);
      if (isColorPicker) {
        var instance = window.sfBlazor.getCompInstance(this.cp_dataId);
        instance.setPaletteWidth(this.popup.querySelector(CONTAINER), false, zIndex);
      }
      this.setPosition(isColorPicker);
      sf.base.EventHandler.remove(document, MOUSEDOWN, this.mouseDownHandler);
      this.addEventListener();
      this.popup.style.zIndex = zIndex + EMPTY;
      this.popup.style.visibility = EMPTY;
      if (isColorPicker) {
        var instance = window.sfBlazor.getCompInstance(this.cp_dataId);
        instance.setOffset(this.popup, zIndex);
      }
      if (this.popup.firstElementChild) {
        if (this.popup.firstElementChild.firstElementChild && isColorPicker) {
          this.popup.firstElementChild.firstElementChild.focus();
        } else {
          var palette = this.popup.firstElementChild.querySelector('.e-palette');
          if (palette) {
            palette.focus();
          } else {
            this.popup.firstElementChild.focus();
          }
        }
      }
    };
    SfDropDownButton.prototype.setPosition = function (isColorPicker) {
      var left;
      var top;
      var btnLeft;
      var btnTop;
      var popupOffset = this.popup.getBoundingClientRect();
      var height = popupOffset.height;
      var width = popupOffset.width;
      this.popup.style.display = "none";
      var btnOffset = this.element.getBoundingClientRect();
      if (isColorPicker && sf.base.Browser.isDevice) {
        left = document.documentElement.clientWidth / 2 - popupOffset.width / 2 + pageXOffset;
        top = document.documentElement.clientHeight / 2 - popupOffset.height / 2 + pageYOffset;
      } else {
        left = btnOffset.left + pageXOffset;
        top = btnOffset.bottom + pageYOffset;
        btnTop = btnOffset.top + pageYOffset;
        btnLeft = btnOffset.left + pageXOffset;
        if (btnOffset.left + popupOffset.width > document.documentElement.clientWidth) {
          if (btnOffset.left + btnOffset.width - popupOffset.width > document.documentElement.clientLeft) {
            left = left + btnOffset.width - popupOffset.width;
          }
        }
        // Check if there's not enough space in the bottom
        if (btnOffset.top + btnOffset.height + popupOffset.height > document.documentElement.clientHeight) {
          // No space in bottom
          // Position the popup above the button if there's space
          top = btnTop - (popupOffset.height + 4);
          if (top < 0) {
            // No space in top
            top = 0; // Adjust the top to view full color picker
            if (top + popupOffset.height < document.documentElement.clientHeight) {
              // There is enough viewport size.
              if (btnOffset.left + btnOffset.width + popupOffset.width < document.documentElement.clientWidth) {
                // There is enough space in right
                left = btnLeft + btnOffset.width;
              } else {
                left = btnLeft - popupOffset.width;
              }
            } else {
              top = btnOffset.bottom + pageYOffset; // popup opened in bottom
            }
          }
        }
      }
      if (this.element.id.indexOf('imageEditor') !== -1 && sf.base.Browser.isDevice) {
        left = document.documentElement.clientWidth / 2 - popupOffset.width / 2 + pageXOffset;
      }
      this.popup.style.left = Math.ceil(left) + PIXEL;
      this.popup.style.top = Math.ceil(top) + PIXEL;
      this.popup.style.display = "block";
    };
    SfDropDownButton.prototype.mouseDownHandler = function (e) {
      if (this.popup.parentElement) {
        var target = e.target;
        var prevent = true;
        var isColorPicker = this.element.parentElement.classList.contains(COLOR_PICKER);
        if (isColorPicker) {
          var instance = window.sfBlazor.getCompInstance(this.cp_dataId);
          if (sf.base.closest(target, '.e-apply') || sf.base.closest(target, '.e-cancel')) {
            instance.removeZIndex();
          }
        }
        if (!sf.base.Browser.isDevice && target.classList.contains(HSV_MODEL)) {
          var ref = target.parentElement.getBoundingClientRect();
          var btn = this.element.getBoundingClientRect();
          prevent = e.clientX >= ref.left && e.clientX <= ref.right && e.clientY >= ref.top && e.clientY <= ref.bottom || e.clientX >= btn.left && e.clientX <= btn.right && e.clientY >= btn.top && e.clientY <= btn.bottom;
        }
        if (!prevent || !sf.base.closest(target, HASH + this.getDropDownButton().id) && !sf.base.closest(e.target, HASH + this.popup.id) && !sf.base.closest(e.target, MODEL)) {
          if (isColorPicker) {
            var instance = window.sfBlazor.getCompInstance(this.cp_dataId);
            instance.removeZIndex();
          }
          this.dotNetRef.invokeMethodAsync(BTN_CLICK, null);
          this.removeEventListener();
        }
      } else {
        this.removeEventListener();
      }
    };
    SfDropDownButton.prototype.keydownHandler = function (e) {
      var element = this.getElement();
      var isColorPicker = this.element.parentElement.classList.contains(COLOR_PICKER);
      var Rtl = this.element.parentElement.classList.contains(RTL);
      if (isColorPicker) {
        var instance = window.sfBlazor.getCompInstance(this.cp_dataId);
        instance.paletteKeyDown(e, Rtl);
      }
      if (e.altKey) {
        if (e.keyCode === UP) {
          e.stopPropagation();
          e.preventDefault();
          this.dotNetRef.invokeMethodAsync(BTN_CLICK, null);
          element.focus();
          this.removeEventListener();
        }
      } else {
        var ul = this.popup.firstElementChild;
        if (e.keyCode === ESC || e.keyCode === TAB && !isColorPicker) {
          e.stopPropagation();
          this.dotNetRef.invokeMethodAsync(BTN_CLICK, null);
          if (e.keyCode === ESC) {
            e.preventDefault();
          }
          element.focus();
          this.removeEventListener();
        }
        if (!ul || !ul.classList.contains(DROPDOWN)) {
          return;
        }
        if (e.keyCode === ENTER) {
          e.preventDefault();
          if (e.target.classList.contains(ITEM) && e.target.classList.contains(FOCUSED)) {
            element.focus();
            this.removeEventListener();
          } else {
            e.stopPropagation();
          }
          return;
        }
        if (e.keyCode === UP || e.keyCode === DOWN) {
          if (e.target.classList.contains(DROPDOWN)) {
            e.stopPropagation();
          }
          e.preventDefault();
          sf.splitbuttons.upDownKeyHandler(ul, e.keyCode);
        }
      }
    };
    SfDropDownButton.prototype.getElement = function () {
      return this.element.classList.contains(WRAPPER) ? this.element.firstElementChild : this.element;
    };
    SfDropDownButton.prototype.getDropDownButton = function () {
      return this.element.classList.contains(WRAPPER) ? this.element.getElementsByClassName(ELEMENT)[0] : this.element;
    };
    SfDropDownButton.prototype.closePopup = function () {
      this.removeEventListener();
      if (this.isPopupClick) {
        this.getElement().focus();
        this.isPopupClick = false;
      }
      var isColorPicker = this.element.parentElement.classList.contains(COLOR_PICKER);
      if (isColorPicker && sf.base.Browser.isDevice) {
        var popup = this.popup;
        if (popup && popup.firstElementChild) {
          var model = document.querySelector(MODEL);
          var ctrlBtn = popup.querySelector('.e-ctrl-btn');
          if (model && !ctrlBtn) {
            model.remove();
          }
        }
      }
    };
    SfDropDownButton.prototype.dropDownClickHandler = function (e) {
      var isColorPicker = this.element.parentElement.classList.contains(COLOR_PICKER);
      if (isColorPicker) {
        var instance = window.sfBlazor.getCompInstance(this.cp_dataId);
        if (sf.base.closest(e.target, '.e-dropdown-btn')) {
          instance.removeZIndex();
        }
      }
    };
    SfDropDownButton.prototype.scrollHandler = function (e) {
      if (!this.popup || !document.getElementById(this.popup.id)) {
        var ddb = this.getDropDownButton();
        if (!ddb || !document.getElementById(ddb.id)) {
          sf.base.EventHandler.remove(e.target, SCROLL, this.scrollHandler);
        }
        return;
      }
      var isColorPicker = this.element.parentElement.classList.contains(COLOR_PICKER);
      this.setPosition(isColorPicker);
      if (isColorPicker) {
        var instance = window.sfBlazor.getCompInstance(this.cp_dataId);
        instance.setOffset(this.popup);
      }
    };
    SfDropDownButton.prototype.clickHandler = function (e) {
      this.isPopupClick = true;
    };
    SfDropDownButton.prototype.addEventListener = function (setFocus) {
      sf.base.EventHandler.add(document, MOUSEDOWN, this.mouseDownHandler, this);
      sf.base.EventHandler.add(this.popup, CLICK, this.clickHandler, this);
      sf.base.EventHandler.add(this.popup, KEYDOWN, this.keydownHandler, this);
      sf.base.EventHandler.add(this.element, CLICK, this.dropDownClickHandler, this);
      if (setFocus && this.popup.firstElementChild) {
        var focusEle = this.popup.querySelector(DOT + FOCUSED);
        focusEle ? focusEle.focus() : this.popup.firstElementChild.focus();
      }
    };
    SfDropDownButton.prototype.removeEventListener = function (reposition) {
      sf.base.EventHandler.remove(document, MOUSEDOWN, this.mouseDownHandler);
      sf.base.EventHandler.remove(this.element, CLICK, this.dropDownClickHandler);
      if (this.popup.parentElement) {
        sf.base.EventHandler.remove(this.popup, CLICK, this.clickHandler);
        sf.base.EventHandler.remove(this.popup, KEYDOWN, this.keydownHandler);
        if (reposition) {
          var ddb = this.getDropDownButton();
          if (ddb && document.getElementById(ddb.id)) {
            this.addScrollEvents(false);
            this.element.appendChild(this.popup);
          }
        }
      }
    };
    SfDropDownButton.prototype.addScrollEvents = function (add) {
      var elements = sf.popups.getScrollableParent(this.element);
      for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
        var element = elements_1[_i];
        add ? sf.base.EventHandler.add(element, SCROLL, this.scrollHandler, this) : sf.base.EventHandler.remove(element, SCROLL, this.scrollHandler);
      }
    };
    return SfDropDownButton;
  }();
  // eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match
  var DropDownButton = {
    openPopup: function openPopup(element, popup, dotnetRef, blankIcon, dataId, cp_dataId) {
      var instance = window.sfBlazor.getCompInstance(dataId);
      if (!sf.base.isNullOrUndefined(element)) {
        if (sf.base.isNullOrUndefined(instance)) {
          new SfDropDownButton(element, popup, dotnetRef, dataId, cp_dataId);
          instance = window.sfBlazor.getCompInstance(dataId);
        } else {
          instance.popup = popup;
        }
        instance.openPopup(blankIcon);
      }
    },
    addEventListener: function addEventListener(dataId) {
      var instance = window.sfBlazor.getCompInstance(dataId);
      instance.removeEventListener();
      instance.addEventListener(true);
    },
    removeEventListener: function removeEventListener(dataId) {
      var instance = window.sfBlazor.getCompInstance(dataId);
      instance.removeEventListener(true);
    },
    closePopup: function closePopup(dataId) {
      var instance = window.sfBlazor.getCompInstance(dataId);
      instance.closePopup();
    },
    setIconStyle: function setIconStyle(dataId, blankIcon) {
      var instance = window.sfBlazor.getCompInstance(dataId);
      sf.splitbuttons.setBlankIconStyle(instance.popup, blankIcon);
    }
  };
  return DropDownButton;
}();

/***/ })

}]);(async()=>{await import(`${document.baseURI}_content/Syncfusion.Blazor/scripts/syncfusion-blazor-base.min.js?v=19.3.1`).then(()=>{sfBlazor.loadDependencies('sfdropdownbutton');})})();